name: Download Webpage
on:
    workflow_dispatch:
        inputs:
            url:
                description: 'Webpage URL'
                required: true
            tags:
                description: 'Tags to add to the webpage'
concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: false
jobs:
    build_infra_dev:
        name: Update
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0
            - run: git pull origin main
            - name: 'Set up user ðŸ©¸'
              uses: fregante/setup-git-user@v1
            - uses: oleksiyrudenko/gha-git-credentials@v2-latest
              with:
                  token: '${{ secrets.LES_ARTICLES }}'

            - uses: actions/setup-python@v3
              with:
                  python-version: '3.x'
                  architecture: 'x64'
                  cache: 'pip'
            - name: Install Python Dependencies
              run: pip install -r requirements.txt

            - name: Set up Node
              uses: actions/setup-node@v2
              with:
                  node-version: 14.x

            - name: Cache Dependencies
              uses: actions/cache@v2
              env:
                  cache-name: node-cache
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-
            - name: Install Dependencies
              run: npm install
            - name: Build
              run: npm run build

            - name: Set Variables
              id: set_variables
              run: |
                  echo ::set-output name=path::$(./out/get-path.js ${{ github.event.inputs.url }})
                  echo ::set-output name=domain::$(./out/get-domain.js ${{ github.event.inputs.url }})
                  echo ::set-output name=slug::$(./out/generate-slug.js ${{ github.event.inputs.url }})

            - name: Download Page
              run: |
                  docker pull capsulecode/singlefile 
                  docker tag capsulecode/singlefile singlefile
                  docker run singlefile ${{ github.event.inputs.url }} > "${{ steps.set_variables.outputs.path }}"

            - name: Generate Named Entities
              run: |
                  mkdir tmp
                  pip3 install -U pip setuptools wheel
                  pip3 install -U spacy
                  python3 -m spacy download en_core_web_sm
                  python3 nex.py ${{ steps.set_variables.outputs.path }}
            - name: Update Database
              run: |
                  ./out/update-db.js ${{ github.event.inputs.url }} ${{ github.event.inputs.tags }}
            - name: Add and commit changes
              run: |
                  git pull origin main
                  git add .
                  git commit -m "article(${{ steps.set_variables.outputs.domain }}): ${{ steps.set_variables.outputs.slug }}"
                  git config pull.rebase true
                  git push origin main
